{"version":3,"file":"static/js/21.dee1c174.chunk.js","mappings":"8SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFZ,cAC1BG,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qDAOlBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACoBP,IAFX,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBI,EAAiB,mCAAG,WAAMD,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC4BP,IAFpB,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBI,EAAgB,mCAAG,WAAMF,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC4BP,IAFrB,cACxBG,EADwB,yBAIvBA,EAASC,KAAKM,MAJS,2CAAH,sDAOhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,+BACaa,EADb,oBACmCZ,IAF5B,cACxBG,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qD,wKCM7B,EAlCqB,WACnB,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAwB,mCAAG,8GAEPlB,EAAAA,EAAAA,MAFO,UAEvBI,EAFuB,6BAIrB,IAAIe,MAAM,0BAJW,OAM7BL,EAASV,GANoB,gDAQ7BgB,IAAAA,OAAAA,QAAwB,KAAMC,SARD,yDAAH,qDAW9BH,GACD,GAAE,KAGD,0BACE,wBACGL,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMZ,GAAzC,SACGS,KAFID,EADA,OAUlB,EC1BD,EATa,WACX,OACE,4BACE,wBAAI,8BACJ,SAAC,EAAD,MAGL,C","sources":["Api/getApi.js","components/PopularFilms/PopularFilms.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fbcd27110e3ea351d2ea352461b15e7c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchFullInfoMovie = async searchId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${searchId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async searchId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${searchId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchActorsMovie = async searchId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${searchId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieByName = async searchName => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${searchName}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","import { fetchPopularMovies } from 'Api/getApi';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst PopularFilms = () => {\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchFilmsAndUpdateState = async () => {\n      try {\n        const results = await fetchPopularMovies();\n        if (!results) {\n          throw new Error('No popular films today');\n        }\n        setFilms(results);\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n      }\n    };\n    fetchFilmsAndUpdateState();\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {films.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PopularFilms;\n","import PopularFilms from 'components/PopularFilms/PopularFilms';\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Most popular films today</h1>\n      <PopularFilms />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchFullInfoMovie","searchId","fetchReviewsMovie","fetchActorsMovie","cast","fetchMovieByName","searchName","useState","films","setFilms","location","useLocation","useEffect","fetchFilmsAndUpdateState","Error","Notiflix","message","map","id","title","to","state","from"],"sourceRoot":""}