{"version":3,"file":"static/js/493.0b5707ea.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFZ,cAC1BG,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qDAOlBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACoBP,IAFX,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBI,EAAiB,mCAAG,WAAMD,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC4BP,IAFpB,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBI,EAAgB,mCAAG,WAAMF,GAAN,uFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BAC4BP,IAFrB,cACxBG,EADwB,yBAIvBA,EAASC,KAAKM,MAJS,2CAAH,sDAOhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,EAAAA,EAAAA,IAAA,UAClBH,EADkB,+BACaa,EADb,oBACmCZ,IAF5B,cACxBG,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qD,mCC7B7B,IAJsB,WACpB,OAAO,wBAAI,uDACZ,C,oICiDD,UA7Ca,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEAV,EAAAA,EAAAA,IAAiBO,GAFjB,UAEhBX,EAFgB,6BAId,IAAIe,MAAM,sBAJI,OAMtBL,EAAUV,GANY,gDAQtBgB,IAAAA,OAAAA,QAAwB,KAAMC,SARR,yDAAH,qDAWvBH,GACD,GAAE,CAACH,KAGF,0BACE,wBACS,OAANF,QAAM,IAANA,GAAAA,EAAQS,OACPT,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,KAAhC,OACT,0BACGD,IACC,gBACEE,IAAG,yCAAoCF,GACvCG,IAAI,QACJC,MAAO,GACPC,OAAQ,OAGZ,yBAAG,eAAaJ,MAChB,yBAAG,cAAYF,OAVRD,EADA,KAeX,SAAC,IAAD,OAKT,C","sources":["Api/getApi.js","components/NoInformation/NoInformation.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fbcd27110e3ea351d2ea352461b15e7c';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchFullInfoMovie = async searchId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${searchId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async searchId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${searchId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchActorsMovie = async searchId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${searchId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieByName = async searchName => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${searchName}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","const NoInformation = () => {\n  return <h2>Sorry....☹️ No information. Try more time</h2>;\n};\n\nexport default NoInformation;\n","import { fetchActorsMovie } from 'Api/getApi';\nimport NoInformation from 'components/NoInformation/NoInformation';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilmsCredits = async () => {\n      try {\n        const results = await fetchActorsMovie(movieId);\n        if (!results) {\n          throw new Error('No info about film');\n        }\n        setActors(results);\n      } catch (error) {\n        Notiflix.Notify.failure(error.message);\n      }\n    };\n    fetchFilmsCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {actors?.length ? (\n          actors.map(({ id, character, profile_path, name }) => (\n            <li key={id}>\n              {profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt=\"Actor\"\n                  width={80}\n                  height={120}\n                />\n              )}\n              <p>Actor name: {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))\n        ) : (\n          <NoInformation />\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","axios","response","data","results","fetchFullInfoMovie","searchId","fetchReviewsMovie","fetchActorsMovie","cast","fetchMovieByName","searchName","useState","actors","setActors","movieId","useParams","useEffect","fetchFilmsCredits","Error","Notiflix","message","length","map","id","character","profile_path","name","src","alt","width","height"],"sourceRoot":""}